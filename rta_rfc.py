# -*- coding: utf-8 -*-
"""RTA_rfc.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HjaijCI6_DXik6iENa48SU69_F5sDYBk
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split

rta=pd.read_csv('C:/Users/Shahma/Desktop/RTA/Road Traffic Accidents Dataset.csv')

#Irrelevent columns

rta.drop('Educational_level', axis=1, inplace=True)
rta.drop('Owner_of_vehicle', axis=1, inplace=True)
rta.drop('Work_of_casuality', axis=1, inplace=True)
rta.drop('Sex_of_casualty',axis=1,inplace=True)
rta.drop('Day_of_week',axis=1,inplace=True)
rta.drop('Time',axis=1,inplace=True)
rta.drop('Pedestrian_movement',axis=1,inplace=True)
rta.drop('Fitness_of_casuality',axis=1,inplace=True)
rta.drop('Age_band_of_casualty',axis=1,inplace=True)
rta.drop('Casualty_class',axis=1,inplace=True)
rta.drop('Defect_of_vehicle',axis=1,inplace=True)
rta.drop('Vehicle_driver_relation',axis=1,inplace=True)
rta.drop('Service_year_of_vehicle',axis=1,inplace=True)
rta.drop('Area_accident_occured',axis=1,inplace=True)
rta.drop('Light_conditions',axis=1,inplace=True)
rta.drop('Weather_conditions',axis=1,inplace=True)
rta.drop('Number_of_casualties',axis=1,inplace=True)
rta.drop('Casualty_severity',axis=1,inplace=True)

rta.columns

rta.loc[rta['Age_band_of_driver'] == "Unknown", 'Age_band_of_driver'] = '18-30'
rta.loc[rta['Sex_of_driver'] == "Unknown", 'Sex_of_driver'] = 'Male'
rta.loc[rta['Driving_experience'] == "unknown", 'Driving_experience'] = '5-10yr'
rta.loc[rta['Types_of_Junction'] == "Unknown", 'Types_of_Junction'] = 'Y Shape'
rta.loc[rta['Lanes_or_Medians'] == "Unknown", 'Lanes_or_Medians'] = 'Two-way (divided with broken lines road marking)'

rta.loc[rta['Type_of_collision'] == "Unknown", 'Type_of_collision'] = 'Vehicle with vehicle collision'
rta.loc[rta['Vehicle_movement'] == "Unknown", 'Vehicle_movement'] = 'Going straight'
rta.loc[rta['Cause_of_accident'] == "Unknown", 'Cause_of_accident'] = 'No distancing'



rta['Road_surface_type'].fillna(rta['Road_surface_type'].mode()[0],inplace=True)
rta['Road_allignment'].fillna(rta['Road_allignment'].mode()[0], inplace=True)
rta['Type_of_collision'].fillna(rta['Type_of_collision'].mode()[0], inplace=True)
rta['Vehicle_movement'].fillna(rta['Vehicle_movement'].mode()[0], inplace=True)
rta['Lanes_or_Medians'].fillna(rta['Lanes_or_Medians'].mode()[0], inplace=True)
rta['Types_of_Junction'].fillna(rta['Types_of_Junction'].mode()[0], inplace=True)
rta['Driving_experience'].fillna(rta['Driving_experience'].mode()[0],inplace=True)
rta['Type_of_vehicle'].fillna(rta['Type_of_vehicle'].mode()[0],inplace=True)

# replacing misspelled vehicle type names

# Lorry
rta.loc[(rta['Type_of_vehicle'] == "Lorry (41?100Q)") | 
         (rta['Type_of_vehicle'] == "Lorry (11?40Q)") | 
         (rta['Type_of_vehicle'] == "Pick up upto 10Q")
         , 'Type_of_vehicle'] = 'Lorry'

rta.loc[(rta['Type_of_vehicle'] == "Public (12 seats)") | 
         (rta['Type_of_vehicle'] == "Public (13?45 seats)") | 
         (rta['Type_of_vehicle'] == "Public (> 45 seats)")
         , 'Type_of_vehicle'] = 'Public Vehicles'

rta['Cause_of_accident'].replace('Driving at high speed','Overspeed',inplace=True)

rta.isna().sum()

x = rta.drop(['Accident_severity'],axis=1)
y = rta['Accident_severity']

from sklearn.preprocessing import LabelEncoder
cats_cols = x.columns[x.dtypes == 'object']
for cats_col in cats_cols:
    le = LabelEncoder()
    x[cats_col] = le.fit_transform(x[cats_col])

x.dtypes

x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=42)

from sklearn.ensemble import RandomForestClassifier
rfc=rfc = RandomForestClassifier()

model=rfc.fit(x_train, y_train)
pred = rfc.predict(x_test)

import pickle
pickle.dump(model,open("rfc.pkl","wb"))